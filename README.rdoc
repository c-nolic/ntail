= ntail

A parsing tail(1)-like utility for nginx log files

  > gem install ntail

== Examples

* read from STDIN and print each line to STDOUT <em>(stop with ^D)</em>

    > ntail

* process an nginx log file and print each line to STDOUT

    > ntail /var/log/nginx/access.log

* tail an "active" nginx log file and print each new line to STDOUT <em>(stop with ^C)</em>

    > tail -f /var/log/nginx/access.log | ntail

* tail STDIN and print out the length of each line <em>(to illustrate -e option)</em>

    > ntail -e '{ |line| puts line.size }'

* tail STDIN but only print out non-empty lines <em>(to illustrate -f option)</em>

    > ntail -f '{ |line| line.size > 0 }'

* the following invocations behave exactly the same <em>(to illustrate -e and -f options)</em>

    > ntail
    > ntail -f '{ |line| true }' -e '{ |line| puts line }'

* find all HTTP requests that resulted in a '5xx' HTTP error/status code <em>(e.g. Rails 500 errors)</em>

    > gunzip -S .gz -c access.log-20101216.gz | ./bin/ntail -f '{ |line| line.server_error_status? }'

== TODO

* implement a native <tt>"-f"</tt> option for ntail, similar to that of <tt>tail(1)</tt>

* make <tt>PROXY_IP_ADDRESS</tt> configurable (from command line and/or rc file)
* make <tt>OFFICE_IP_ADDRESS</tt> configurable (from command line and/or rc file)
* make <tt>KNOWN_SEARCH_BOTS</tt> configurable (from command line and/or rc file)
* make <tt>INTERNAL_REFERERS</tt> configurable (from command line and/or rc file)
* make <tt>AUTOMATED_REQUESTS</tt> configurable (from command line and/or rc file)
* make <tt>STATIC_REPOS</tt> configurable (from command line and/or rc file)

== Acknowledgements

ntail's parsing feature is inspired by an nginx log parser written by {Richard Taylor (moomerman)}[https://github.com/moomerman]

== Contributing to ntail
 
* Check out the latest master to make sure the feature hasn't been implemented or the bug hasn't been fixed yet
* Check out the issue tracker to make sure someone already hasn't requested it and/or contributed it
* Fork the project
* Start a feature/bugfix branch
* Commit and push until you are happy with your contribution
* Make sure to add tests for it. This is important so I don't break it in a future version unintentionally.
* Please try not to mess with the Rakefile, version, or history. If you want to have your own version, or is otherwise necessary, that is fine, but please isolate to its own commit so I can cherry-pick around it.

== Copyright

Copyright (c) 2010 Peter Vandenberk. See LICENSE.txt for further details.

